Using ``add_integer``
---------------------
This is a text file in reStructuredText format.
It contains a test for the add_integer function in the 0-add_integer module.
First import ``add_integer`` from the ``0-add_integer`` module:
    Test 00 Open 0-add_integer
    >>> add_integer = __import__('0-add_integer').add_integer

Now test:
    Test 01: Two positive integers passed
    >>> add_integer(3, 5)
    8
    
    Test 02: Two zeros passed
    >>> add_integer(0, 0)
    0

    Test 03: Only one zero passed  
    >>> add_integer(0)
    98

    Test 04: One positive and one negative passed    
    >>> add_integer(2, -2)
    0

    Test 05: One negative and one positive passed    
    >>> add_integer(-2, 2)
    0

    Test 06: Only one positive passed  
    >>> add_integer(2)
    100

    Test 07: Two characters passed  
    >>> add_integer('a','b')
    Traceback (most recent call last):
    ...
    TypeError: a must be an integer

     
    Test 08: One value infinity passed  
    >>> add_integer(float('inf'), 0)
    Traceback (most recent call last):
    ...
    OverflowError: cannot convert float infinity to integer

    Test 09: value NAN passed  
    >>> add_integer(0, float('nan'))
    Traceback (most recent call last):
    ...
    ValueError: cannot convert float NaN to integer